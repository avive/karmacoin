// Copyright (c) 2022, KarmaCoin Authors. a@karmaco.in.
// This work is licensed under the KarmaCoin v0.1.0 license published in the LICENSE file of this repo.
//

syntax = "proto3";
package karma_coin.verifier;

import "karma_coin/core_types/types.proto";

message RegisterNumberRequest {
  core_types.AccountId account_id = 1;
  core_types.MobileNumber mobile_number = 2;
  core_types.Signature signature = 3;
}

enum RegisterNumberResult {
  REGISTER_NUMBER_RESULT_INVALID_NUMBER = 0;
  REGISTER_NUMBER_RESULT_INVALID_SIGNATURE = 1;
  REGISTER_NUMBER_RESULT_NUMBER_ALREADY_REGISTERED = 2;
  REGISTER_NUMBER_RESULT_NUMBER_ACCOUNT_EXISTS = 3;
  REGISTER_NUMBER_RESULT_CODE_SENT = 4;
}

message RegisterNumberResponse {
  RegisterNumberResult result = 1;
  core_types.Signature signature = 2;
}

message VerifyNumberRequest {
  core_types.AccountId account_id = 1;
  core_types.MobileNumber mobile_number = 2;
  string code = 3; // auth code received via sms
  string nickname = 4;
  core_types.Signature signature = 5;
}

// mobile phone numbers verifier api service
service PhoneNumbersVerifierService {
  // Request to register a phone number. Will trigger an SMS to that number
  rpc RegisterNumber(RegisterNumberRequest) returns (RegisterNumberResponse);

  // Request to verify a number by providing code sent via sms from verifier
  rpc VerifyNumber(VerifyNumberRequest) returns (core_types.VerifyNumberResponse);
}
